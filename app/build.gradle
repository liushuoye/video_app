plugins {
    id 'com.android.application'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.shuoye.video"
        minSdkVersion 16
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"


        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        buildFeatures {
            dataBinding true
        }
        multiDexEnabled true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {

    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.1'
    implementation 'androidx.navigation:navigation-fragment:2.3.5'
    implementation 'androidx.navigation:navigation-ui:2.3.5'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    ////////////////////////////////////////////////////////////////////
    ///数据库
    def room_version = "2.3.0"
    implementation "androidx.room:room-runtime:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"
    // 可选 - Room 的 RxJava2 支持
    implementation "androidx.room:room-rxjava2:$room_version"
    // 可选 - Room 的 RxJava3 支持
    implementation "androidx.room:room-rxjava3:$room_version"
    // 可选 - 对 Room 的 Guava 支持，包括 Optional 和 ListenableFuture
    implementation "androidx.room:room-guava:$room_version"
    // 可选 - 测试助手
    testImplementation "androidx.room:room-testing:$room_version"
    // 可选 - 分页 3 集成
    implementation "androidx.room:room-paging:2.4.0-beta01"


    ////////////////////////////////////////////////////////////////////
    /// 常用工具

    /* 为简化set,get,toString代码引入lombok */
    //noinspection AnnotationProcessorOnCompilePath
    implementation 'org.projectlombok:lombok:1.18.22'
    annotationProcessor 'org.projectlombok:lombok:1.18.22'
    implementation 'org.glassfish:javax.annotation:10.0-b28'
    /* Opencc4j 是一个用于繁体中文和简体中文之间转换的开源项目，支持java 的字符级转换、短语级转换。 */
    //和lombok有包冲突，排除了 nlp-common
    implementation('com.github.houbb:opencc4j:1.7.1', { exclude module: 'nlp-common' })
    /*Apache Commons Lang，一个 Java 实用程序类包，用于 java.lang 层次结构中的类，或者被认为是非常标准的以证明 java.lang 存在的合理性。*/
    implementation 'org.apache.commons:commons-lang3:3.12.0'

    ////////////////////////////////////////////////////////////////////
    /// 网络请求
    /* 网络请求框架 okhttp3 */
    implementation 'com.squareup.okhttp3:mockwebserver:5.0.0-alpha.2'
    /* OkHttp 日志拦截器 */
    implementation 'com.squareup.okhttp3:logging-interceptor:5.0.0-alpha.2'
    /* Retrofit2 是一个 OkHttp  网络请求框架的封装。 */
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    /* 必要依赖 */
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.9.0'
    /* 必要依赖，解析json字符所用 */
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    /* Fastjson 是一个用 Java 编写的 JSON 处理器（JSON 解析器 + JSON 生成器）*/
    implementation 'com.alibaba:fastjson:1.2.78'
    /* Java 标量值类型的改造转换器。*/
    implementation 'com.squareup.retrofit2:converter-scalars:2.9.0'
    /* Rxjava2 异步框架 */
    //implementation 'io.reactivex.rxjava3:rxjava:3.1.2'
    //implementation 'io.reactivex.rxjava3:rxandroid:3.0.0'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.0'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.10'

    implementation 'com.github.donkingliang:LabelsView:1.6.5'
    //LabelsView 标签列表控件
    // 高度自定义的安卓视频框架 https://github.com/Jzvd/JZVideo
    implementation 'cn.jzvd:jiaozivideoplayer:7.7.0'
    //轮播图框架，banner
    implementation 'io.github.youth5201314:banner:2.2.2'
    // Glide v4 : 快速高效的Android图片加载库
    implementation 'com.github.bumptech.glide:glide:4.12.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.12.0'
}